#!/bin/bash
# little helper scripts, these scripts need to be in the top level
# of the project dir

hash jq 2>/dev/null || message_print CRITICAL "Please install jq to use this build tool. https://github.com/stedolan/jq"
hash aws 2>/dev/null || message_print CRITICAL "Please install the AWS CLI API to use this build tool. https://aws.amazon.com/cli/"
hash curl 2>/dev/null || message_print CRITICAL "Please install curl"

# Variables
CURRENT_DIR=$(pwd)
NUBIS_VERSION="0.9.0"
TEMPLATE_FILE="nubis/cloudformation/main.json"
PARAMETERS_FILE="nubis/cloudformation/parameters.json"

# Print messages
# usage:    message_print CRITICAL "Unable to run script"
#           message_print OK "all good"
message_print(){
    local exit_after=0

    case "$1" in
        OK)
            code="0"
            color="0;32"
            ;;
        WARNING)
            code="1"
            color="0;33"
            ;;
        CRITICAL)
            code="2"
            color="1;31"
            exit_code=1
            ;;
    esac

    if [[ -t 1 ]]; then
        echo -e "\033[${color}m${2}\033[0m"
    else
        echo "${1}: ${2}"
    fi

    if [[ -n "$3" ]]; then
        echo
        echo "$3"
        echo
    fi

    #if [[ $exit_code -gt 0 ]]; then
    #    exit $exit_code
    #    return $exit_code
    #fi
}

_usage() {
    echo -en "$0\n\n"
    echo -en "Usage: $0 command StackName [Optional Parameters]\n\n"
    echo -en "Commands:\n"
    echo -en "init                              Initialize a nubis project for you\n"
    echo -en "build-ami                         Runs nubis builder and builds your ami for you\n"
    echo -en "create                            Creates your cloudformation stack\n"
    echo -en "delete                            Deletes your cloudformation stack as well as delete any consul data\n"
    echo -en "update                            Updates cloudformation stack\n"
    echo -en "help                              This message\n"
    echo -en "\n\n"
    echo -en "Optional Parameters:\n"
    echo -en "  These are optional parameters that aws cli is able to accept. Eg:\n"
    echo -en "      nubis-wrapper create StackName --capabilites CAPABILITY_IAM\n"
    exit 0
}

_cf_file_usage() {
    if [ -z "${1}" ]; then echo "Usage: $FUNCNAME [template|parameters]"; return 1; fi
    local cf_file=$1
    message_print CRITICAL "Unable to locate cloudformation ${cf_file} file from you current working directory (${CURRENT_DIR})"
    message_print CRITICAL "Please make sure that you are running ${0} from the base of your project directory"
}

init_nubis_project() {
    if [ -z "${1}" ]; then echo "Usage: $FUNCNAME [ProjectName]"; return 1; fi
    local project_name=$1
    local github_username=$(git config --global github.user)

    if [[ -z "${github_username}" ]]; then
        echo -en "Github username not set, you can set your github username by running the following command\n\n"
        echo -en "                      git config --global github.user [username]                              \n"
        echo -en "\n"
        return 1
    fi

    # Download skeleton files
    curl -L -f -s -o /tmp/nubis-skel-${NUBIS_VERSION}.$$.tar.gz https://github.com/Nubisproject/nubis-skel/archive/v${NUBIS_VERSION}.tar.gz
    RV=$?

    if [[ ${RV} != 0 ]] || [[ ! -f "/tmp/nubis-skel-${NUBIS_VERSION}.$$.tar.gz" ]]; then
        message_print CRITICAL "ERROR: nubis-skel did not download correctly"
        return 1
    fi

    mkdir -p ${CURRENT_DIR}/${project_name}
    tar xzf /tmp/nubis-skel-${NUBIS_VERSION}.$$.tar.gz --strip=1 -C ${CURRENT_DIR}/${project_name}
    RV=$?
    if [[ ${RV} == 0 ]]; then
        cd ${CURRENT_DIR}/${project_name}
        git init .
        git add .
        git commit -q -am "Initial commit of nubis project: ${project_name}. This commit was generated by nubis-wrapper"
        git remote add origin git@github.com:${github_username}/${project_name}.git
        message_print OK "Now create a repo on github called ${project_name} and run git push from within the ${project_name} directory"
        rm -f /tmp/nubis-skel-${NUBIS_VERSION}.$$.tar.gz
    else
        return ${RV}
    fi
}

if [[ $1 == "create" ]] || [[ $1 == "update" ]]; then
    if [[ ! -f "${CURRENT_DIR}/nubis/cloudformation/main.json" ]]; then
        _cf_file_usage template
        exit 1
    fi

    if [[ ! -f "${CURRENT_DIR}/nubis/cloudformation/parameters.json" ]]; then
        _cf_file_usage parameters
        exit 1
    fi
fi

case $1 in
    init)
        init_nubis_project $2
    ;;
    help | -h | --help)
        _usage
    ;;
    *)
        _usage
        exit 1
    ;;
esac
